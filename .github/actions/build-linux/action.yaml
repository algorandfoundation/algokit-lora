name: 'Build for Linux'
description: 'Build for Linux'
inputs:
  production-release:
    description: 'Whether this is a production release'
    required: true
  release-version:
    description: 'The release version'
    required: true
  release-tag:
    description: 'The release tag'
    required: true
  crabnebula-release-id:
    description: 'The CrabNebula release ID'
    required: true
  tauri-signing-private-key:
    description: 'The Tauri signing private key'
    required: true
  tauri-signing-private-key-password:
    description: 'The Tauri signing private key password'
    required: true
  tauri-signing-public-key:
    description: 'The Tauri signing public key'
    required: true
  crabnebula-org-name:
    description: 'The CrabNebula org name'
    required: true
  crabnebula-app-name:
    description: 'The CrabNebula app name'
    required: true
  crabnebula-api-key:
    description: 'The CrabNebula API key'
    required: true
  appimage-signing-private-key:
    description: 'The AppImage signing private key'
    required: true
  appimage-signing-private-key-password:
    description: 'The AppImage signing private key password'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libwebkit2gtk-4.1-dev \
          build-essential \
          curl \
          wget \
          file \
          libxdo-dev \
          libssl-dev \
          libayatana-appindicator3-dev \
          librsvg2-dev \
          gnupg2
      shell: bash

    - name: Setup tauri.conf.json
      if: ${{ inputs.release-version != '' }}
      run: |
        sed -i "s/\"version\": \"0.1.0\"/\"version\": \"${{ inputs.release-version }}\"/g" "src-tauri/tauri.conf.json"
        sed -i "s/\"createUpdaterArtifacts\": false/\"createUpdaterArtifacts\": true/g" "src-tauri/tauri.conf.json"
        sed -i "s/CN_ORG_NAME/${{ inputs.crabnebula-org-name }}/g" "src-tauri/tauri.conf.json"
        sed -i "s/CN_APP_NAME/${{ inputs.crabnebula-app-name }}/g" "src-tauri/tauri.conf.json"
        sed -i "s/CN_CHANNEL/${{ inputs.production-release != 'true' && '?channel=beta' || '' }}/g" "src-tauri/tauri.conf.json"
        sed -i "s/TAURI_SIGNING_PUBLIC_KEY/${{ inputs.tauri-signing-public-key }}/g" "src-tauri/tauri.conf.json"
      shell: bash

    - name: Import AppImage signing key
      run: |
        echo "${{ inputs.appimage-signing-private-key }}" > appimage.key
        gpg2 --batch --passphrase ${{ inputs.appimage-signing-private-key-password }} --import appimage.key
      shell: bash

    - name: Build tauri app
      run: |
        npm run tauri build -- --bundles appimage
      shell: bash
      env:
        TAURI_SIGNING_PRIVATE_KEY: ${{ inputs.tauri-signing-private-key }}
        TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ inputs.tauri-signing-private-key-password }}
        SIGN: 1
        APPIMAGETOOL_SIGN_PASSPHRASE: ${{ inputs.appimage-signing-private-key-password }}
        APPIMAGETOOL_FORCE_SIGN: 1

    - name: Upload artifacts to release
      uses: softprops/action-gh-release@v1
      with:
        fail_on_unmatched_files: true
        files: |
          src-tauri/target/release/bundle/appimage/algokit-lora*.AppImage
        tag_name: ${{ inputs.release-tag }}
        prerelease: ${{ inputs.production-release != 'true' }}

    - name: Upload artifacts to CrabNebula
      uses: crabnebula-dev/cloud-release@v0.2.0
      with:
        command: release upload "${{ inputs.crabnebula-org-name }}/${{ inputs.crabnebula-app-name }}" --framework tauri ${{ inputs.production-release != 'true' && '--channel beta' || '' }}
        api-key: ${{ inputs.crabnebula-api-key }}
