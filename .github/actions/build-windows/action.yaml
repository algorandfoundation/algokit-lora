name: 'Build for Windows'
description: 'Build for Windows'
inputs:
  release-version:
    description: 'The release version'
  azure_tenant_id:
    description: ''
    required: true
  azure_client_id:
    description: ''
    required: true
  azure_client_secret:
    description: ''
    required: true

runs:
  using: 'composite'
  steps:
    - name: Create a dummy file
      shell: bash
      run: echo "This is a dummy file." > dummy.exe

    - name: List files for debugging
      shell: bash
      run: ls -R

    - name: Sign executable
      uses: azure/trusted-signing-action@v0.3.20
      with:
        azure-tenant-id: ${{ inputs.azure_tenant_id }}
        azure-client-id: ${{ inputs.azure_client_id }}
        azure-client-secret: ${{ inputs.azure_client_secret }}
        endpoint: https://weu.codesigning.azure.net/
        trusted-signing-account-name: algokit-signing
        certificate-profile-name: algokit
        files-folder: dummy.exe
        files-folder-filter: exe
        file-digest: SHA256
        timestamp-rfc3161: http://timestamp.acs.microsoft.com
        timestamp-digest: SHA256

    - name: Sign executable
      shell: bash
      env:
        FILES_FOLDER: ${{ github.workspace }}/src-tauri/target/release/deps/algokit-lora.exe
        FILES_FOLDER_FILTER: exe
        BEFORE_BUNDLE_COMMAND: pwsh -command Invoke-TrustedSigning
      run: |
        cd "$GITHUB_WORKSPACE"
        cat './src-tauri/tauri.conf.json' | jq '.build += {"beforeBundleCommand": env.BEFORE_BUNDLE_COMMAND}' > './src-tauri/temp.json' && mv './src-tauri/temp.json' './src-tauri/tauri.conf.json'

    - name: Build tauri app
      run: |
        npm run tauri build
      shell: pwsh

    # - name: Sign executable
    #   uses: azure/trusted-signing-action@v0.3.20
    #   with:
    #     azure-tenant-id: ${{ inputs.azure_tenant_id }}
    #     azure-client-id: ${{ inputs.azure_client_id }}
    #     azure-client-secret: ${{ inputs.azure_client_secret }}
    #     endpoint: https://weu.codesigning.azure.net/
    #     trusted-signing-account-name: algokit-signing
    #     certificate-profile-name: algokit
    #     files-folder: './'
    #     files-folder-filter: exe
    #     file-digest: SHA256
    #     timestamp-rfc3161: http://timestamp.acs.microsoft.com
    #     timestamp-digest: SHA256

    # - uses: tauri-apps/tauri-action@v0
    #   env:
    #     azure-tenant-id: ${{ inputs.azure_tenant_id }}
    #     azure-client-id: ${{ inputs.azure_client_id }}
    #     azure-client-secret: ${{ inputs.azure_client_secret }}
    #     endpoint: https://weu.codesigning.azure.net/
    #     trusted-signing-account-name: algokit-signing
    #     certificate-profile-name: algokit-lora
    #     files-folder: ${{ github.workspace }}/src-tauri/target/release/deps/<algokit-lora>.exe
    #     files-folder-filter: exe
    #     file-digest: SHA256
    #     timestamp-rfc3161: http://timestamp.acs.microsoft.com
    #     timestamp-digest: SHA256
    #   with:
    #     updaterJsonPreferNsis: true
    #     tagName: v__VERSION__
    #     releaseName: 'v__VERSION__ ${{ env.RELEASE_TITLE }}'
    #     releaseBody: "${{ env.RELEASE_NOTES }}"
    #     releaseDraft: true
    #     prerelease: false
    #     args: ${{ matrix.args }}

    # -Endpoint $env:ENDPOINT -CodeSigningAccountName $env:TRUSTED_SIGNING_ACCOUNT_NAME
    # -CertificateProfileName $env:CERTIFICATE_PROFILE_NAME -FilesFolder $env:FILES_FOLDER
    # -FilesFolderFilter $env:FILES_FOLDER_FILTER -FileDigest $env:FILE_DIGEST
    # -TimestampRfc3161 $env:TIMESTAMP_RFC3161 -TimestampDigest $env:TIMESTAMP_DIGEST"
