name: 'Build for Windows'
description: 'Build for Windows'
inputs:
  release-version:
    description: 'The release version'
  package_name:
    description: 'The name of the package'
    required: true
  azure_tenant_id:
    description: ''
    required: true
  azure_client_id:
    description: ''
    required: true
  azure_client_secret:
    description: ''
    required: true

runs:
  using: 'composite'
  steps:
    # This step is just seting up the trusted signing action with the secrets required to authenticate with the trusted signing service. It is expected to fail.
    # It will be used later to sign the executable step.
    - name: Initialize sign executable
      uses: azure/trusted-signing-action@v0.3.20
      continue-on-error: true
      with:
        azure-tenant-id: ${{ inputs.azure_tenant_id }}
        azure-client-id: ${{ inputs.azure_client_id }}
        azure-client-secret: ${{ inputs.azure_client_secret }}

    - name: Sign executable
      shell: bash
      env:
        AZURE_TENANT_ID: ${{ inputs.azure_tenant_id }}
        AZURE_CLIENT_ID: ${{ inputs.azure_client_id }}
        AZURE_CLIENT_SECRET: ${{ inputs.azure_client_secret }}
        BEFORE_BUNDLE_COMMAND: pwsh -command Invoke-TrustedSigning -Endpoint 'https://weu.codesigning.azure.net/' -CodeSigningAccountName 'algokit-signing' -CertificateProfileName 'algokit'  -FilesFolder '${{ github.workspace }}\src-tauri\target\release\deps\' -FilesFolderFilter 'exe' -FileDigest 'SHA256' -timeout '1200' -TimestampRfc3161 'http://timestamp.acs.microsoft.com' -TimestampDigest 'SHA256'

      run: |
        cd "$GITHUB_WORKSPACE"
        cat './src-tauri/tauri.conf.json' | jq '.build += {"beforeBundleCommand": env.BEFORE_BUNDLE_COMMAND}' > './src-tauri/temp.json' && mv './src-tauri/temp.json' './src-tauri/tauri.conf.json'

    - name: Build tauri app
      run: |
        npm run tauri build
      shell: pwsh

    - name: Sign winget installer
      uses: azure/trusted-signing-action@v0.3.20
      with:
        azure-tenant-id: ${{ inputs.azure_tenant_id }}
        azure-client-id: ${{ inputs.azure_client_id }}
        azure-client-secret: ${{ inputs.azure_client_secret }}
        endpoint: https://weu.codesigning.azure.net/
        trusted-signing-account-name: algokit-signing
        certificate-profile-name: algokit
        files-folder: ${{ github.workspace }}\src-tauri\target\release\msi\
        files-folder-filter: msi
        file-digest: SHA256
        timestamp-rfc3161: http://timestamp.acs.microsoft.com
        timestamp-digest: SHA256

    - name: Upload msi artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.package_name }}-msi
        path: ${{ github.workspace }}\src-tauri\target\release\msi\algokit-lora.msi
        if-no-files-found: error

    # - uses: tauri-apps/tauri-action@v0
    #   env:
    #     azure-tenant-id: ${{ inputs.azure_tenant_id }}
    #     azure-client-id: ${{ inputs.azure_client_id }}
    #     azure-client-secret: ${{ inputs.azure_client_secret }}
    #     endpoint: https://weu.codesigning.azure.net/
    #     trusted-signing-account-name: algokit-signing
    #     certificate-profile-name: algokit-lora
    #     files-folder: ${{ github.workspace }}/src-tauri/target/release/deps/<algokit-lora>.exe
    #     files-folder-filter: exe
    #     file-digest: SHA256
    #     timestamp-rfc3161: http://timestamp.acs.microsoft.com
    #     timestamp-digest: SHA256
    #   with:
    #     updaterJsonPreferNsis: true
    #     tagName: v__VERSION__
    #     releaseName: 'v__VERSION__ ${{ env.RELEASE_TITLE }}'
    #     releaseBody: "${{ env.RELEASE_NOTES }}"
    #     releaseDraft: true
    #     prerelease: false
    #     args: ${{ matrix.args }}
