{
  "hints": {
    "add(uint64,uint64)uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "get_pay_txn_amount(pay)uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "echo_bytes(byte[])byte[]": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "echo_static_array(uint64[4])uint64[4]": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "echo_dynamic_array(uint64[])uint64[]": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "nest_array_and_tuple(uint64[][],(uint64[],string))(uint64[][],(uint64[],string))": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "echo_boolean(bool)bool": {
      "call_config": {
        "no_op": "CALL"
      }
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCgpzbWFydF9jb250cmFjdHMudGVzdF9jb250cmFjdC5jb250cmFjdC5UZXN0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbToKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy90ZXN0X2NvbnRyYWN0L2NvbnRyYWN0LnB5OjE3CiAgICAvLyBjbGFzcyBUZXN0Q29udHJhY3QoQVJDNENvbnRyYWN0KToKICAgIGludCAxCiAgICByZXR1cm4K"
  },
  "state": {
    "global": {
      "num_byte_slices": 0,
      "num_uints": 0
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "schema": {
    "global": {
      "declared": {},
      "reserved": {}
    },
    "local": {
      "declared": {},
      "reserved": {}
    }
  },
  "contract": {
    "name": "TestContract",
    "methods": [
      {
        "name": "add",
        "args": [
          {
            "type": "uint64",
            "name": "a"
          },
          {
            "type": "uint64",
            "name": "b"
          }
        ],
        "returns": {
          "type": "uint64"
        }
      },
      {
        "name": "get_pay_txn_amount",
        "args": [
          {
            "type": "pay",
            "name": "pay_txn"
          }
        ],
        "returns": {
          "type": "uint64"
        }
      },
      {
        "name": "echo_bytes",
        "args": [
          {
            "type": "byte[]",
            "name": "a"
          }
        ],
        "returns": {
          "type": "byte[]"
        }
      },
      {
        "name": "echo_static_array",
        "args": [
          {
            "type": "uint64[4]",
            "name": "arr"
          }
        ],
        "returns": {
          "type": "uint64[4]"
        }
      },
      {
        "name": "echo_dynamic_array",
        "args": [
          {
            "type": "uint64[]",
            "name": "arr"
          }
        ],
        "returns": {
          "type": "uint64[]"
        }
      },
      {
        "name": "nest_array_and_tuple",
        "args": [
          {
            "type": "uint64[][]",
            "name": "arr"
          },
          {
            "type": "(uint64[],string)",
            "name": "tuple"
          }
        ],
        "returns": {
          "type": "(uint64[][],(uint64[],string))"
        }
      },
      {
        "name": "echo_boolean",
        "args": [
          {
            "type": "bool",
            "name": "bool"
          }
        ],
        "returns": {
          "type": "bool"
        }
      }
    ],
    "networks": {}
  },
  "bare_call_config": {
    "no_op": "CREATE"
  }
}
