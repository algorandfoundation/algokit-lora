{
  "hints": {
    "add(uint64,uint64)uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "get_pay_txn_amount(pay)uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "echo_bytes(byte[])byte[]": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "echo_static_array(uint64[4])uint64[4]": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "echo_dynamic_array(uint64[])uint64[]": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "nest_array_and_tuple(uint64[][],(uint64[],string))(uint64[][],(uint64[],string))": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "echo_boolean(bool)bool": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "inner_pay_appl(uint64)uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "set_local()void": {
      "call_config": {
        "opt_in": "CALL"
      }
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
  },
  "state": {
    "global": {
      "num_byte_slices": 0,
      "num_uints": 1
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 1
    }
  },
  "schema": {
    "global": {
      "declared": {
        "global_state_big_int": {
          "type": "uint64",
          "key": "global_state_big_int"
        }
      },
      "reserved": {}
    },
    "local": {
      "declared": {
        "local_state_big_int": {
          "type": "uint64",
          "key": "local_state_big_int"
        }
      },
      "reserved": {}
    }
  },
  "contract": {
    "name": "TestContract",
    "methods": [
      {
        "name": "add",
        "args": [
          {
            "type": "uint64",
            "name": "a"
          },
          {
            "type": "uint64",
            "name": "b"
          }
        ],
        "readonly": false,
        "returns": {
          "type": "uint64"
        }
      },
      {
        "name": "get_pay_txn_amount",
        "args": [
          {
            "type": "pay",
            "name": "pay_txn"
          }
        ],
        "readonly": false,
        "returns": {
          "type": "uint64"
        }
      },
      {
        "name": "echo_bytes",
        "args": [
          {
            "type": "byte[]",
            "name": "a"
          }
        ],
        "readonly": false,
        "returns": {
          "type": "byte[]"
        }
      },
      {
        "name": "echo_static_array",
        "args": [
          {
            "type": "uint64[4]",
            "name": "arr"
          }
        ],
        "readonly": false,
        "returns": {
          "type": "uint64[4]"
        }
      },
      {
        "name": "echo_dynamic_array",
        "args": [
          {
            "type": "uint64[]",
            "name": "arr"
          }
        ],
        "readonly": false,
        "returns": {
          "type": "uint64[]"
        }
      },
      {
        "name": "nest_array_and_tuple",
        "args": [
          {
            "type": "uint64[][]",
            "name": "arr"
          },
          {
            "type": "(uint64[],string)",
            "name": "tuple"
          }
        ],
        "readonly": false,
        "returns": {
          "type": "(uint64[][],(uint64[],string))"
        }
      },
      {
        "name": "echo_boolean",
        "args": [
          {
            "type": "bool",
            "name": "bool"
          }
        ],
        "readonly": false,
        "returns": {
          "type": "bool"
        }
      },
      {
        "name": "inner_pay_appl",
        "args": [
          {
            "type": "uint64",
            "name": "appId"
          }
        ],
        "readonly": false,
        "returns": {
          "type": "uint64"
        }
      },
      {
        "name": "set_local",
        "args": [],
        "readonly": false,
        "returns": {
          "type": "void"
        }
      }
    ],
    "networks": {}
  },
  "bare_call_config": {
    "no_op": "CREATE"
  }
}